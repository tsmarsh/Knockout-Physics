// Generated by CoffeeScript 1.3.1
/* Demo
*/

var Demo,
  __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

Demo = (function() {

  Demo.name = 'Demo';

  Demo.COLOURS = ['#DC0048', '#F14646', '#4AE6A9', '#7CFF3F', '#4EC9D9', '#E4272E'];

  function Demo() {
    this.mousemove = __bind(this.mousemove, this);

    this.resize = __bind(this.resize, this);
    this.physics = new Physics();
    this.mouse = new Particle();
    this.mouse.fixed = true;
    this.height = window.innerHeight;
    this.width = window.innerWidth;
    this.renderTime = 0;
    this.counter = 0;
  }

  Demo.prototype.setup = function(full) {
    if (full == null) {
      return full = true;
    }
    /* Override and add paticles / springs here
    */

  };

  /* Initialise the demo (override).
  */


  Demo.prototype.init = function() {
    var particle, _i, _len, _ref;
    this.setup();
    _ref = this.physics.particles;
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      particle = _ref[_i];
      particle.colour = Random.item(Demo.COLOURS);
    }
    document.addEventListener('touchmove', this.mousemove, false);
    document.addEventListener('mousemove', this.mousemove, false);
    return document.addEventListener('resize', this.resize, false);
  };

  /* Handler for window resize event.
  */


  Demo.prototype.resize = function(event) {
    this.width = window.innerWidth;
    return this.height = window.innerHeight;
  };

  /* Update loop.
  */


  Demo.prototype.step = function() {
    return this.physics.step();
  };

  /* Handler for window mousemove event.
  */


  Demo.prototype.mousemove = function(event) {
    var touch;
    event.preventDefault();
    if (event.touches && !!event.touches.length) {
      touch = event.touches[0];
      return this.mouse.pos.set(touch.pageX, touch.pageY);
    } else {
      return this.mouse.pos.set(event.clientX, event.clientY);
    }
  };

  return Demo;

})();
